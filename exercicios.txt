üü¢ 25 Exerc√≠cios F√°ceis de Ponteiros (Fundamentos)

üéØ Objetivo: entender o que s√£o endere√ßos de mem√≥ria, como acessar e modificar valores com ponteiros, e us√°-los em fun√ß√µes simples.

1Ô∏è‚É£ Endere√ßo de vari√°vel

Declare uma vari√°vel inteira e exiba o valor e o endere√ßo dela na tela.

2Ô∏è‚É£ Atribui√ß√£o de endere√ßo

Declare um ponteiro para inteiro, fa√ßa-o apontar para a vari√°vel do exerc√≠cio anterior e exiba o valor por meio do ponteiro.

3Ô∏è‚É£ Altera√ß√£o via ponteiro

Atribua um novo valor √† vari√°vel usando apenas o ponteiro e exiba o resultado.

4Ô∏è‚É£ Soma com dois ponteiros

Crie duas vari√°veis inteiras, aponte dois ponteiros para elas e mostre a soma de seus valores via ponteiros.

5Ô∏è‚É£ Fun√ß√£o simples com ponteiro

Crie uma fun√ß√£o void dobrar(int *p) que dobre o valor apontado.

6Ô∏è‚É£ Leitura via ponteiro

Leia um n√∫mero inteiro diretamente por meio de um ponteiro e mostre-o.

7Ô∏è‚É£ Ponteiro nulo

Crie um ponteiro nulo (NULL) e mostre uma mensagem de erro se tentar acess√°-lo.

8Ô∏è‚É£ Compara√ß√£o de endere√ßos

Declare duas vari√°veis e compare seus endere√ßos de mem√≥ria.

9Ô∏è‚É£ Troca de valores (swap)

Crie uma fun√ß√£o trocar(int *a, int *b) que troque os valores de duas vari√°veis inteiras.

üîü Incremento via ponteiro

Crie uma fun√ß√£o incrementar(int *x) que adicione 1 ao valor apontado.

11Ô∏è‚É£ Vetor e ponteiro equivalentes

Crie um vetor de 5 inteiros e percorra-o com um ponteiro, exibindo todos os valores.

12Ô∏è‚É£ Aritm√©tica de ponteiros

Mostre o efeito de ptr + 1 sobre o endere√ßo de mem√≥ria de um vetor.

13Ô∏è‚É£ Ponteiro para float

Crie uma vari√°vel float, um ponteiro para float e mostre o valor e o endere√ßo.

14Ô∏è‚É£ Ponteiro para char

Crie uma vari√°vel char, um ponteiro para char, e exiba o valor e o endere√ßo.

15Ô∏è‚É£ Ponteiro em fun√ß√£o de soma

Crie uma fun√ß√£o somar(int *a, int *b, int *resultado) que armazene a soma de a + b em resultado.

16Ô∏è‚É£ Mudar o valor de tr√™s vari√°veis

Crie uma fun√ß√£o que receba tr√™s ponteiros (int *a, *b, *c) e multiplique cada valor por 2.

17Ô∏è‚É£ Vetor e incremento

Use ponteiros para somar 10 a todos os elementos de um vetor de 5 inteiros.

18Ô∏è‚É£ Ponteiro para ponteiro

Crie uma vari√°vel, um ponteiro e um ponteiro para ponteiro; exiba o valor acessando com **.

19Ô∏è‚É£ Fun√ß√£o com retorno por refer√™ncia

Crie uma fun√ß√£o que receba dois n√∫meros e retorne o endere√ßo do maior deles.

20Ô∏è‚É£ Tamanho de tipos

Use sizeof para mostrar quantos bytes cada tipo (int, float, double, char) ocupa na mem√≥ria.

21Ô∏è‚É£ Endere√ßos de vetor

Mostre os endere√ßos dos elementos de um vetor e perceba o deslocamento entre eles.

22Ô∏è‚É£ Ponteiro e constante

Crie um ponteiro para constante e tente modificar o valor (observe o erro).

23Ô∏è‚É£ Ponteiro gen√©rico

Use void * para armazenar o endere√ßo de vari√°veis de tipos diferentes e mostre os valores convertendo com casts.

24Ô∏è‚É£ Fun√ß√£o que imprime endere√ßo

Crie uma fun√ß√£o void exibirEndereco(int *x) que mostre o endere√ßo passado como par√¢metro.

25Ô∏è‚É£ Ponteiro e la√ßo for

Crie um vetor de 10 inteiros e use apenas um ponteiro para exibir todos os elementos com for.